{"version":3,"sources":["components/Splash/chart.png","components/Splash/daily.png","components/Splash/badges.png","components/AdSpace.js","constants/colors.js","components/Dashboard/components/EnergyBar/EnergyBar.js","data/lib/getRandomInRange.js","data/constants.js","data/lib/getEstimatedCostFromKwh.js","data/realtime.js","data/days.js","components/Dashboard/components/CustomAxis/CustomAxis.js","components/Dashboard/index.js","components/Dash.js","components/Header.js","components/Splash/Splash.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","__webpack_require__","p","AdSpace","state","products","name","desc","imgUrl","link","react_default","a","createElement","className","ExpansionPanel_default","expanded","style","padding","backgroundColor","ExpansionPanelSummary_default","Typography_default","width","textAlign","fontSize","ExpansionPanelDetails_default","display","justifyItems","justifyContent","flexWrap","flexBasis","alignItems","Grid_default","container","spacing","this","map","product","idx","item","xs","sm","md","key","Card_default","maxWidth","CardContent_default","src","height","alt","paddingLeft","variant","color","paddingBottom","Button_default","href","size","paddingTop","target","Component","colors","GREEN_DARK","GREEN_LIGHT","WHITE","BLACK","EnergyBar","props","x","y","kwh","max","isKwhShowing","hasStroke","formattedKwh","toFixed","filled","rx","ry","stroke","fill","textAnchor","concat","getRandomInRange","min","Math","random","COST_IN_KWH","getEstimatedCostFromKwh","previousKwh","getRealtimeData","nextKwh","estimatedCost","timestamp","Date","now","DAYS","0","1","2","3","4","5","6","generateDailyUsage","_","index","randomKwh","date","setDate","getDate","cost","getDay","CustomAxis","_ref","payload","transform","dy","value","daysBack","formatToUsd","Intl","NumberFormat","currency","daysUsageData","Object","toConsumableArray","Array","maxDayUsage","reduce","largestKwh","day","CustomShapeBarChart","_useState","useState","_useState2","slicedToArray","currentEnergyUsage","setCurrentEnergyUsage","_useState3","_useState4","maxForCurrent","setMaxForCurrent","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","nextState","resetValue","_formatToUsd$format$s","format","split","_formatToUsd$format$s2","currentPriceWhole","currentPriceDecimal","cx","text-align-center","dashboard-description","current-price","es6","barGap","data","objectSpread","margin","top","right","left","bottom","dataKey","shape","label","position","entry","barCategoryGap","tickLine","tick","Dash","components_AdSpace","NavWithStyles","withStyles","list","classes","toggleNav","Drawer_default","open","onClose","tabIndex","role","onClick","onKeyDown","List_default","react_router_dom","to","textDecoration","ListItem_default","button","Equalizer_default","ListItemText_default","primary","Notifications_default","Divider_default","CheckBox_default","Star_default","Bookmarks_default","MoneyOff_default","Group_default","Settings_default","ContactSupport_default","Info_default","Header","isNavOpen","_this","setState","react","AppBar_default","Toolbar_default","IconButton_default","menuButton","aria-label","Menu_default","imageContainer","component","Link","PureComponent","flexGrow","marginLeft","marginRight","Splash","flexDirection","daily","chart","badges","Boolean","window","location","hostname","match","ReactDOM","render","components_Header","react_router","exact","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.41d37b56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chart.bd0693b2.png\";","module.exports = __webpack_public_path__ + \"static/media/daily.9cbeb146.png\";","module.exports = __webpack_public_path__ + \"static/media/badges.1e60b3bd.png\";","import React, { Component } from 'react';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\n\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\n\nclass AdSpace extends Component {\n  state = {\n    products: [\n      {\n        name: 'Phillips Hue Lightbulbs',\n        desc: 'Save up to $20 a month*',\n        imgUrl:\n          'https://images-na.ssl-images-amazon.com/images/I/41ZzVX0WpuL.jpg',\n        link: 'https://www2.meethue.com/en-us/bulbs',\n      },\n      {\n        name: 'Nest Thermostat',\n        desc: 'Save up to $145 a year*',\n        imgUrl:\n          'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6YeS4FikhiilZtuZf7umopA0DmtJwveez9gX_jVKv1HJd2n87',\n        link: 'https://nest.com/thermostats/',\n      },\n      {\n        name: 'Energy Star Refrigerator',\n        desc: 'Save $300 over 5 years*',\n        imgUrl:\n          'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSdpNvzey5rP6umCujtLYxLOx7kY2i_I_HLQ4WcLJ4ngz9DRej2',\n        link:\n          'https://www.lg.com/us/refrigerators/lg-LFXS24623S-french-3-door-refrigerator',\n      },\n    ],\n  };\n\n  render() {\n    return (\n      <div className=\"ad-toggle\">\n        <ExpansionPanel\n          expanded\n          style={{ padding: '5px', backgroundColor: '#f5f5f5' }}\n        >\n          <ExpansionPanelSummary style={{ padding: '0 5px 0 5px' }}>\n            <Typography\n              style={{\n                padding: '0 32px 0 32px',\n                width: '100%',\n                textAlign: 'center',\n                fontSize: '20px',\n              }}\n            >\n              Power Up Your Energy Savings\n            </Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails\n            style={{\n              display: 'flex',\n              justifyItems: 'center',\n              justifyContent: 'space-between',\n              flexWrap: 'wrap',\n              flexBasis: '1',\n              alignItems: 'center',\n            }}\n          >\n            <Grid container spacing={24}>\n              {this.state.products.map((product, idx) => {\n                return (\n                  <Grid item xs={12} sm={6} md={4} key={idx}>\n                    <Card style={{ padding: '10px', maxWidth: '300' }}>\n                      <CardContent style={{ display: 'flex', padding: '10px' }}>\n                        <div>\n                          <img\n                            src={product.imgUrl}\n                            style={{\n                              height: '5em',\n                              width: 'auto',\n                              padding: '3px',\n                            }}\n                            alt=\"Product\"\n                          />\n                        </div>\n                        <div\n                          style={{ paddingLeft: '10px', textAlign: 'center' }}\n                        >\n                          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                            {product.name}\n                          </Typography>\n                          <Typography\n                            style={{ paddingBottom: '5px' }}\n                            variant=\"body1\"\n                            color=\"textSecondary\"\n                          >\n                            {product.desc}\n                          </Typography>\n\n                          <div>\n                            <Button\n                              href={product.link}\n                              variant=\"outlined\"\n                              size=\"small\"\n                              color=\"primary\"\n                              style={{ paddingTop: '6px' }}\n                              target=\"_blank\"\n                            >\n                              Buy Now\n                            </Button>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </div>\n    );\n  }\n}\n\nexport default AdSpace;\n","export const GREEN_DARK = '#45c65a';\nexport const GREEN_LIGHT = '#9af6a9';\nexport const WHITE = '#fff';\nexport const BLACK = '#000';\n\nexport default {\n  GREEN_DARK,\n  GREEN_LIGHT,\n  WHITE,\n  BLACK,\n};\n","import React from 'react';\nimport './style.css';\nimport colors from '../../../../constants/colors';\n\nexport default function EnergyBar(props) {\n  const { x, y, width, height, kwh, max, isKwhShowing, hasStroke } = props;\n  const formattedKwh = kwh.toFixed(2);\n  const filled = (formattedKwh * height) / max;\n\n  return (\n    <g>\n      <rect\n        x={x}\n        y={y}\n        rx={5}\n        ry={0}\n        width={width}\n        height={height}\n        stroke={hasStroke ? colors.GREEN_DARK : 'none'}\n        fill={colors.WHITE}\n      />\n      <rect\n        x={x}\n        y={y + height - filled}\n        rx={0}\n        ry={0}\n        width={width}\n        height={filled}\n        stroke=\"none\"\n        fill={colors.GREEN_LIGHT}\n      />\n      {isKwhShowing && typeof kwh === 'number' && (\n        <text\n          x=\"50%\"\n          y={y + 50}\n          textAnchor=\"middle\"\n          style={{ fontSize: 22 }}\n          fill={colors.GREEN_DARK}\n        >\n          {`${formattedKwh} KW/H`}\n        </text>\n      )}\n    </g>\n  );\n}\n","export default function getRandomInRange(min, max) {\n  return Math.random() * (max - min) + min;\n}\n","export const COST_IN_KWH = 0.33;\n","import { COST_IN_KWH } from '../constants';\n\nexport default function getEstimatedCostFromKwh(kwh) {\n  return kwh * COST_IN_KWH;\n}\n","import getRandomInRange from './lib/getRandomInRange';\nimport getEstimatedCostFromKwh from './lib/getEstimatedCostFromKwh';\n\nlet previousKwh = 34;\n\nfunction getRealtimeData() {\n  const random = getRandomInRange(0, 0.005);\n  const nextKwh = previousKwh + random;\n  previousKwh = nextKwh;\n\n  return {\n    estimatedCost: getEstimatedCostFromKwh(nextKwh),\n    kwh: nextKwh,\n    timestamp: Date.now(),\n  };\n}\n\nexport default getRealtimeData;\n","import getRandomInRange from './lib/getRandomInRange';\nimport getEstimatedCostFromKwh from './lib/getEstimatedCostFromKwh';\n\nconst DAYS = {\n  0: 'S',\n  1: 'M',\n  2: 'T',\n  3: 'W',\n  4: 'T',\n  5: 'F',\n  6: 'S',\n};\n\nfunction generateDailyUsage(_, index) {\n  const randomKwh = getRandomInRange(0, 20);\n  var date = new Date();\n  date.setDate(date.getDate() - index);\n\n  return {\n    cost: getEstimatedCostFromKwh(randomKwh),\n    kwh: randomKwh,\n    timestamp: DAYS[date.getDay()],\n  };\n}\n\nexport default function getUsageForDays(daysBack) {\n  return [...new Array(daysBack)].map(generateDailyUsage);\n}\n","import React from 'react';\nimport colors from '../../../../constants/colors';\n\nexport default function({ x, y, stroke, payload }) {\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text x={0} y={0} dy={16} textAnchor=\"end\" fill={colors.GREEN_DARK}>\n        {payload.value}\n      </text>\n    </g>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport cx from 'classnames';\nimport EnergyBar from './components/EnergyBar';\nimport getRealtimeData from '../../data/realtime';\nimport getUsageForDays from '../../data/days';\nimport './style.css';\nimport colors from '../../constants/colors';\nimport CustomAxis from './components/CustomAxis';\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest function.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\nconst formatToUsd = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n});\nconst daysUsageData = getUsageForDays(7);\nconst maxDayUsage = daysUsageData.reduce((largestKwh, day) => {\n  if (largestKwh > day.kwh) return largestKwh;\n\n  return day.kwh;\n}, 0);\n\nexport default function CustomShapeBarChart() {\n  const [currentEnergyUsage, setCurrentEnergyUsage] = useState(\n    getRealtimeData()\n  );\n  const [maxForCurrent, setMaxForCurrent] = useState(100);\n  const interval = 1000;\n\n  useInterval(() => {\n    setCurrentEnergyUsage(state => {\n      const nextState = getRealtimeData();\n      const resetValue = maxForCurrent * 0.8;\n      if (state.kwh <= resetValue && nextState.kwh >= resetValue) {\n        setMaxForCurrent(maxForCurrent * 2);\n      }\n      return nextState;\n    });\n  }, interval);\n\n  const [currentPriceWhole, currentPriceDecimal] = formatToUsd\n    .format(currentEnergyUsage.estimatedCost)\n    .split('.');\n\n  return (\n    <div>\n      <div\n        className=\"dashboard-today\"\n        style={{ backgroundColor: colors.GREEN_DARK }}\n      >\n        <h1\n          className={cx({ 'text-align-center': 1, 'dashboard-description': 1 })}\n        >\n          {\"Today's Energy Usage\"}\n        </h1>\n        <h1 className={cx({ 'text-align-center': 1, 'current-price': 1 })}>\n          <span className=\"current-price-whole\">{currentPriceWhole}</span>\n          <span className=\"current-price-decimal\">.{currentPriceDecimal}</span>\n        </h1>\n        <div className=\"justify-content-center\">\n          <BarChart\n            barGap={0}\n            width={270}\n            height={270}\n            data={[{ ...currentEnergyUsage, max: maxForCurrent }]}\n            margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n          >\n            <Bar\n              dataKey=\"max\"\n              fill=\"#8884d8\"\n              shape={<EnergyBar isKwhShowing={true} />}\n              label={{ position: 'top' }}\n            >\n              {[currentEnergyUsage].map((entry, index) => (\n                <Cell key={`cell-${index}`} />\n              ))}\n            </Bar>\n          </BarChart>\n        </div>\n      </div>\n      <div className=\"dashboard-history\">\n        <h1\n          className={cx({ 'text-align-center': 1, 'dashboard-description': 1 })}\n          style={{ color: colors.GREEN_DARK }}\n        >\n          {'Past 7 Days'}\n        </h1>\n        <div className=\"justify-content-center\">\n          <div\n            style={{\n              maxWidth: 600,\n              width: '100%',\n              position: 'relative',\n              left: '-18px',\n            }}\n          >\n            <ResponsiveContainer height={170}>\n              <BarChart\n                barGap={100}\n                barCategoryGap=\"20%\"\n                height={180}\n                data={daysUsageData.map(day => ({ ...day, max: maxDayUsage }))}\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n              >\n                <XAxis\n                  stroke={colors.GREEN_DARK}\n                  tickLine={false}\n                  dataKey=\"timestamp\"\n                  tick={CustomAxis}\n                />\n                <YAxis\n                  stroke={colors.GREEN_DARK}\n                  tickLine={false}\n                  tick={CustomAxis}\n                />\n                <Bar\n                  dataKey=\"max\"\n                  fill=\"#8884d8\"\n                  shape={<EnergyBar hasStroke={true} />}\n                  label={{ position: 'top' }}\n                >\n                  {[currentEnergyUsage].map((entry, index) => (\n                    <Cell key={`cell-${index}`} />\n                  ))}\n                </Bar>\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport AdSpace from './AdSpace';\nimport Dashboard from './Dashboard';\n\nclass Dash extends Component {\n  render() {\n    return (\n      <div>\n        <Dashboard />\n        <AdSpace />\n      </div>\n    );\n  }\n}\n\nexport default Dash;\n","import React, { Fragment, PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\n\n// material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\n\n// icons\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\nimport CheckIcon from '@material-ui/icons/CheckBox';\nimport DashboardIcon from '@material-ui/icons/Equalizer';\nimport FeedbackIcon from '@material-ui/icons/ContactSupport';\nimport GroupIcon from '@material-ui/icons/Group';\nimport InfoIcon from '@material-ui/icons/Info';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MoneyIcon from '@material-ui/icons/MoneyOff';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport StarIcon from '@material-ui/icons/Star';\n\nconst styles = {\n  imageContainer: {\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nfunction Nav(props) {\n  const { classes, toggleNav } = props;\n\n  return (\n    <Drawer open={true} onClose={toggleNav}>\n      <div tabIndex={0} role=\"button\" onClick={toggleNav} onKeyDown={toggleNav}>\n        <div className={classes.list}>\n          <List>\n            <Link to=\"/dashboard\" style={{ textDecoration: 'none' }}>\n              <ListItem button>\n                <DashboardIcon />\n                <ListItemText primary=\"Dashboard\" />\n              </ListItem>\n            </Link>\n            <Link to=\"/alerts\" style={{ textDecoration: 'none' }}>\n              <ListItem button>\n                <NotificationsIcon />\n                <ListItemText primary=\"Alerts\" />\n              </ListItem>\n            </Link>\n          </List>\n          <Divider />\n\n          <List>\n            <Link to=\"/goals\" style={{ textDecoration: 'none' }}>\n              <ListItem button>\n                <CheckIcon />\n                <ListItemText primary=\"Goals\" />\n              </ListItem>\n            </Link>\n            <Link to=\"/rewards\" style={{ textDecoration: 'none' }}>\n              <ListItem button>\n                <StarIcon />\n                <ListItemText primary=\"Rewards\" />\n              </ListItem>\n            </Link>\n            <Link to=\"/badges\" style={{ textDecoration: 'none' }}>\n              <ListItem button>\n                <BookmarksIcon />\n                <ListItemText primary=\"Badges\" />\n              </ListItem>\n            </Link>\n          </List>\n          <Divider />\n\n          <List>\n            <Link to=\"/offers\" style={{ textDecoration: 'none' }}>\n              <ListItem button>\n                <MoneyIcon />\n                <ListItemText primary=\"Offers\" />\n              </ListItem>\n            </Link>\n            <Link to=\"/social\" style={{ textDecoration: 'none' }}>\n              <ListItem button>\n                <GroupIcon />\n                <ListItemText primary=\"Social\" />\n              </ListItem>\n            </Link>\n            <Link to=\"/settings\" style={{ textDecoration: 'none' }}>\n              <ListItem button>\n                <SettingsIcon />\n                <ListItemText primary=\"Settings\" />\n              </ListItem>\n            </Link>\n            <Link to=\"/support\" style={{ textDecoration: 'none' }}>\n              <ListItem button>\n                <FeedbackIcon />\n                <ListItemText primary=\"Support\" />\n              </ListItem>\n            </Link>\n            <Link to=\"/about\" style={{ textDecoration: 'none' }}>\n              <ListItem button>\n                <InfoIcon />\n                <ListItemText primary=\"About\" />\n              </ListItem>\n            </Link>\n          </List>\n        </div>\n      </div>\n    </Drawer>\n  );\n}\n\nconst NavWithStyles = withStyles({\n  list: {\n    width: 210,\n  },\n})(Nav);\n\nclass Header extends PureComponent {\n  state = {\n    isNavOpen: false,\n  };\n\n  toggleNav = () => {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Fragment>\n        <AppBar color=\"default\" position=\"sticky\">\n          <Toolbar>\n            <IconButton\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"Menu\"\n              onClick={this.toggleNav}\n            >\n              <MenuIcon />\n            </IconButton>\n            <div\n              className={classes.imageContainer}\n              style={{ width: '96px', height: '50px' }}\n            >\n              <Link to=\"/dashboard\">\n                <img\n                  src=\"logo.png\"\n                  style={{ height: '6em', width: 'auto' }}\n                  alt=\"Logo\"\n                />\n              </Link>\n            </div>\n            <Button color=\"inherit\" component={Link} to=\"/\">\n              ABOUT\n            </Button>\n            <Button color=\"inherit\" component={Link} to=\"#\">\n              LOGOUT\n            </Button>\n          </Toolbar>\n        </AppBar>\n\n        {this.state.isNavOpen && <NavWithStyles toggleNav={this.toggleNav} />}\n      </Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(Header);\n","import React, { Component } from 'react';\nimport chart from './chart.png';\nimport './style.css';\nimport daily from './daily.png';\nimport badges from './badges.png';\n\nclass Splash extends Component {\n  render() {\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <div id=\"title\">\n          <h1>How it Works</h1>\n        </div>\n        <div\n          className=\"home-div\"\n          id=\"sect1\"\n          style={{\n            display: 'flex',\n            justifyContent: 'space-around',\n            flexWrap: 'wrap',\n          }}\n        >\n          <div className=\"sub-div green\">\n            <p className=\"home-text\">\n              Track your energy usage and daily energy cost in real time\n            </p>\n          </div>\n          <div className=\"sub-div\">\n            <img src={daily} alt=\"Daily\" />\n          </div>\n          <div className=\"sub-div green\">\n            <p className=\"home-text\">View your progress for the current week</p>\n          </div>\n          <div className=\"sub-div\">\n            <img src={chart} alt=\"Chart\" />\n          </div>\n          <div className=\"sub-div green\">\n            <p className=\"home-text\">\n              Compete in monthly energy saving challenges with neighbors and\n              friends\n            </p>\n          </div>\n          <div className=\"sub-div\">\n            <img src={badges} alt=\"Badges\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Splash;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable no-console */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport Dash from './components/Dash';\nimport Header from './components/Header';\nimport Splash from './components/Splash/';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nexport default function App(props) {\n  return (\n    <Router>\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Splash} />\n          <Route path=\"/dashboard\" component={Dash} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n"],"sourceRoot":""}